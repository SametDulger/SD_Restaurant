version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - restaurant-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - restaurant-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - restaurant-network

  # API Services (Multiple instances for load balancing)
  api1:
    build:
      context: .
      target: final-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SD_Restaurant_Prod;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - Redis__ConnectionString=redis:6379
      - RabbitMQ__ConnectionString=amqp://admin:admin123@rabbitmq:5672
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
    networks:
      - restaurant-network

  api2:
    build:
      context: .
      target: final-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SD_Restaurant_Prod;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - Redis__ConnectionString=redis:6379
      - RabbitMQ__ConnectionString=amqp://admin:admin123@rabbitmq:5672
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
    networks:
      - restaurant-network

  api3:
    build:
      context: .
      target: final-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SD_Restaurant_Prod;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - Redis__ConnectionString=redis:6379
      - RabbitMQ__ConnectionString=amqp://admin:admin123@rabbitmq:5672
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
    networks:
      - restaurant-network

  # Web UI Services (Multiple instances)
  web1:
    build:
      context: .
      target: final-web
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApiBaseUrl=http://gateway
    depends_on:
      - gateway
    networks:
      - restaurant-network

  web2:
    build:
      context: .
      target: final-web
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApiBaseUrl=http://gateway
    depends_on:
      - gateway
    networks:
      - restaurant-network

  # API Gateway
  gateway:
    build:
      context: .
      target: final-gateway
    ports:
      - "5001:80"
    depends_on:
      - api1
      - api2
      - api3
    networks:
      - restaurant-network

  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
      - api3
      - web1
      - web2
    networks:
      - restaurant-network

  # Monitoring (Prometheus)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - restaurant-network

  # Monitoring (Grafana)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - restaurant-network

volumes:
  sqlserver_data:
  redis_data:
  rabbitmq_data:
  grafana_data:

networks:
  restaurant-network:
    driver: bridge 